<!DOCTYPE html>
<html lang="pt-BR">
  <head>
    <meta charset="UTF-8" />
    <title>Responder Simulado</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="/assets/theme-d32f8eb8.css" />
    <style>
      main {
        margin-bottom: 100px;
      }
      footer {
        position: fixed;
        bottom: 0;
        left: 0;
        right: 0;
        background: #fff;
        border-top: 1px solid #ccc;
        padding: 20px;
      }
      .question-card {
        margin-bottom: 20px;
      }
      .alternative-container {
        cursor: pointer;
        transition: background-color 0.2s;
        display: flex;
        align-items: center;
      }
      /* Aplica a seleção apenas no círculo */
      .alternative-toggle.alternative-selected {
        background-color: rgb(79 70 229 / var(--tw-bg-opacity));
        color: white;
      }
      .question-index {
        width: 40px;
        height: 40px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: bold;
        background-color: #f1f1f1;
        border-radius: 4px;
        margin-right: 10px;
      }
      footer .nav-buttons {
        display: flex;
        justify-content: center;
        align-items: center;
        gap: 20px;
      }
      .btn-custom {
        padding: 0.5rem 1rem;
        background-color: #007bff;
        color: #fff;
        border: none;
        border-radius: 4px;
        cursor: pointer;
      }
      .btn-custom:disabled {
        background-color: #ccc;
        cursor: not-allowed;
      }
      .alternative-toggle {
        flex-shrink: 0;
      }
      .alternative-text {
        padding-left: 10px;
        flex-grow: 1;
      }
      /* Estilos do popover do mapa de questões com animação */
      .map-popover {
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%) scale(0.9);
        background: #f8f9fa;
        border: 1px solid #ccc;
        border-radius: 4px;
        padding: 20px;
        z-index: 1000;
        width: 300px;
        max-height: 80vh;
        overflow-y: auto;
        opacity: 0;
        visibility: hidden;
        transition: opacity 0.3s ease, transform 0.3s ease, visibility 0.3s;
      }
      .map-popover.active {
        opacity: 1;
        visibility: visible;
        transform: translate(-50%, -50%) scale(1);
      }
      .map-popover header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 10px;
      }
      .map-popover .map {
        display: flex;
        flex-wrap: wrap;
        gap: 5px;
      }
      .map-popover .map div {
        width: 30px;
        height: 30px;
        border: 1px solid #ccc;
        display: flex;
        justify-content: center;
        align-items: center;
        border-radius: 4px;
        cursor: pointer;
      }
      .map-popover .map div.answered {
        background-color: #28a745;
        color: #fff;
      }
      .map-popover .close-btn {
        background: none;
        border: none;
        font-size: 1.2rem;
        cursor: pointer;
      }
      .map-toggle-btn {
        position: fixed;
        bottom: 100px;
        right: 20px;
        padding: 10px 15px;
        background: #007bff;
        color: #fff;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        z-index: 1000;
      }
      #timer {
        text-align: center;
        font-size: 20px;
        font-weight: bold;
        margin-bottom: 20px;
      }
    </style>
  </head>
  <body>
    <div class="min-h-screen flex flex-col lg:ps-64 w-full">
      <main class="p-6 space-y-6">
        <h4 class="text-lg font-semibold text-default-900 text-center mb-6">
          Responder Simulado
        </h4>
        <!-- Exibição do timer persistente -->
        <div id="timer">Tempo restante: --:--:--</div>
        <div class="container">
          <% if (questoes && questoes.length > 0) { %> <% var questao =
          questoes[currentPage - 1]; %>
          <div
            class="question-card card-simulado shadow rounded-lg bg-white dark:bg-default-50 border"
          >
            <header class="d-flex align-items-baseline px-3 py-3">
              <div class="d-flex align-items-center">
                <div class="question-index"><%= currentPage %></div>
              </div>
            </header>
            <div class="px-3 pb-3">
              <div class="mt-2">
                <div class="font-size-2"><%- questao.enunciado %></div>
                <div class="d-flex flex-column mt-3">
                  <% var alternativas = { A: questao.alternativa_a, B:
                  questao.alternativa_b, C: questao.alternativa_c, D:
                  questao.alternativa_d, E: questao.alternativa_e }; %> <%
                  Object.keys(alternativas).forEach(function(key) { %> <% if
                  (alternativas[key]) { %>
                  <div
                    class="alternative-container p-3 my-2"
                    data-questao="<%= questao.id %>"
                  >
                    <!-- Atribuímos o data-alternative diretamente no elemento que será marcado -->
                    <div
                      class="alternative-toggle text-center font-weight-bold"
                      data-alternative="<%= key %>"
                      style="
                        font-weight: bold;
                        width: 40px;
                        height: 40px;
                        line-height: 40px;
                        border: 1.5px solid
                          hsl(
                            var(--twc-primary) /
                              var(--twc-primary-opacity, var(--tw-bg-opacity))
                          );
                        border-radius: 50%;
                      "
                    >
                      <%= key %>
                    </div>
                    <div class="alternative-text"><%= alternativas[key] %></div>
                  </div>
                  <% } %> <% }); %>
                </div>
              </div>
            </div>
          </div>
          <% } else { %>
          <div class="text-center text-base text-gray-700">
            Nenhuma questão encontrada.
          </div>
          <% } %>
        </div>
      </main>
      <!-- Footer com navegação -->
      <footer>
        <div
          class="nav-buttons"
          style="margin-bottom: 20px; justify-content: center"
        >
          <button type="button" class="btn-custom" id="encerrar-simulado-btn">
            Encerrar simulado
          </button>
        </div>
        <div class="nav-buttons">
          <% if (currentPage > 1) { %>
          <button
            type="button"
            class="btn-custom"
            onclick="window.location.href='/aluno/responder-simulado/<%= simulado.id %>?page=<%= currentPage - 1 %>'"
          >
            Anterior
          </button>
          <% } else { %>
          <button type="button" class="btn-custom" disabled>Anterior</button>
          <% } %> <% if (currentPage < totalPages) { %>
          <button
            type="button"
            class="btn-custom"
            onclick="window.location.href='/aluno/responder-simulado/<%= simulado.id %>?page=<%= currentPage + 1 %>'"
          >
            Próxima
          </button>
          <% } else { %>
          <button type="button" class="btn-custom" disabled>Próxima</button>
          <% } %>
        </div>
      </footer>
    </div>

    <!-- Botão fixo para alternar a exibição do mapa de questões -->
    <button class="map-toggle-btn" id="mapToggleBtn">Mapa de Questões</button>

    <!-- Popover do mapa de questões com animação -->
    <div class="map-popover" id="mapPopover">
      <header>
        <span>Mapa de Questões</span>
        <button class="close-btn" id="closeMapPopover">&times;</button>
      </header>
      <div class="map">
        <% questoes.forEach(function(q, index) { %>
        <div data-question="<%= index + 1 %>" data-question-id="<%= q.id %>">
          <%= index + 1 %>
        </div>
        <% }); %>
      </div>
      <div style="margin-top: 20px; text-align: center">
        <button class="btn-custom" id="encerrarSimuladoMap">
          Encerrar simulado
        </button>
      </div>
    </div>

    <script>
      // --- Timer persistente ---
      var examTimeInSeconds = Number("<%= simulado.tempo_prova %>");
      var storedStartTime = localStorage.getItem("simulado_start_time");
      if (!storedStartTime) {
        storedStartTime = Date.now();
        localStorage.setItem("simulado_start_time", storedStartTime);
      } else {
        storedStartTime = parseInt(storedStartTime, 10);
      }

      function formatTime(seconds) {
        var h = Math.floor(seconds / 3600);
        var m = Math.floor((seconds % 3600) / 60);
        var s = seconds % 60;
        return (
          (h < 10 ? "0" : "") +
          h +
          ":" +
          (m < 10 ? "0" : "") +
          m +
          ":" +
          (s < 10 ? "0" : "") +
          s
        );
      }

      var timerElement = document.getElementById("timer");

      function updateTimer() {
        var elapsedSeconds = Math.floor((Date.now() - storedStartTime) / 1000);
        var timeLeft = examTimeInSeconds - elapsedSeconds;
        timerElement.innerHTML = "Tempo restante: " + formatTime(timeLeft);
        if (timeLeft <= 0) {
          clearInterval(timerInterval);
          alert("O tempo acabou! O simulado será encerrado.");
          localStorage.removeItem("simulado_start_time");
          window.location.href = "/aluno/encerrar-simulado/<%= simulado.id %>";
        }
      }
      var timerInterval = setInterval(updateTimer, 1000);
      updateTimer();

      // --- Função para restaurar a seleção de alternativas ---
      function restoreAlternatives() {
        document
          .querySelectorAll(".alternative-container")
          .forEach(function (container) {
            var qId = container.getAttribute("data-questao");
            var saved = localStorage.getItem("questao_" + qId);
            if (saved) {
              container
                .querySelectorAll(".alternative-toggle")
                .forEach(function (elem) {
                  elem.classList.remove("alternative-selected");
                });
              var selected = container.querySelector(
                '.alternative-toggle[data-alternative="' + saved + '"]'
              );
              if (selected) {
                selected.classList.add("alternative-selected");
              }
            }
          });
        markAnsweredQuestions();
      }

      // --- Seleção de alternativas ---
      document
        .querySelectorAll(".alternative-container")
        .forEach(function (el) {
          el.addEventListener("click", function () {
            var currentQuestao = el.getAttribute("data-questao");
            document
              .querySelectorAll(
                '.alternative-container[data-questao="' +
                  currentQuestao +
                  '"] .alternative-toggle'
              )
              .forEach(function (sibling) {
                sibling.classList.remove("alternative-selected");
              });
            var toggle = el.querySelector(".alternative-toggle");
            toggle.classList.add("alternative-selected");
            var alternative = toggle.getAttribute("data-alternative");
            localStorage.setItem("questao_" + currentQuestao, alternative);
            markAnsweredQuestions();
          });
        });

      window.addEventListener("load", restoreAlternatives);
      window.addEventListener("pageshow", restoreAlternatives);

      // --- Função para marcar as questões respondidas no mapa ---
      function markAnsweredQuestions() {
        document
          .querySelectorAll(".map-popover .map div")
          .forEach(function (el) {
            var qId = el.getAttribute("data-question-id");
            if (localStorage.getItem("questao_" + qId) !== null) {
              el.classList.add("answered");
            } else {
              el.classList.remove("answered");
            }
          });
      }

      // --- Eventos para "Encerrar simulado" ---
      var encerrarBtn = document.getElementById("encerrar-simulado-btn");
      if (encerrarBtn) {
        encerrarBtn.addEventListener("click", function () {
          if (confirm("Tem certeza que deseja encerrar o simulado?")) {
            localStorage.removeItem("simulado_start_time");
            window.location.href =
              "/aluno/encerrar-simulado/<%= simulado.id %>";
          }
        });
      }
      var encerrarSimuladoMap = document.getElementById("encerrarSimuladoMap");
      if (encerrarSimuladoMap) {
        encerrarSimuladoMap.addEventListener("click", function () {
          if (confirm("Tem certeza que deseja encerrar o simulado?")) {
            localStorage.removeItem("simulado_start_time");
            window.location.href =
              "/aluno/encerrar-simulado/<%= simulado.id %>";
          }
        });
      }

      // --- Alterna exibição do popover do mapa de questões com animação ---
      const mapToggleBtn = document.getElementById("mapToggleBtn");
      const mapPopover = document.getElementById("mapPopover");
      const closeMapPopover = document.getElementById("closeMapPopover");

      mapToggleBtn.addEventListener("click", function () {
        mapPopover.classList.toggle("active");
      });

      closeMapPopover.addEventListener("click", function () {
        mapPopover.classList.remove("active");
      });

      // --- Navega para a questão correspondente ao clicar no número do mapa ---
      document.querySelectorAll(".map-popover .map div").forEach((el) => {
        el.addEventListener("click", () => {
          const questionNum = el.getAttribute("data-question");
          window.location.href =
            "/aluno/responder-simulado/<%= simulado.id %>?page=" + questionNum;
        });
      });
    </script>
  </body>
</html>
